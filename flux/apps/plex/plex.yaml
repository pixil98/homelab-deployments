apiVersion: apps/v1
kind: Deployment
metadata:
  name: plex
  namespace: plex
  labels:
    app: plex
spec:
  replicas: 1
  selector:
    matchLabels:
      app: plex
  template:
    metadata:
      labels:
        app: plex
    spec:
      initContainers:
        - name: config-load
          image: alpine:latest
          imagePullPolicy: Always
          command: [ "/bin/sh", "-c" ]
          args: [ "apk update; apk add --upgrade rsync; rsync -av --delete /config-source/ /config" ]
          volumeMounts:
            - mountPath: /config-source
              name: plex-config-source
            - mountPath: /config
              name: plex-config 
      containers:
        - name: plex
          image: plexinc/pms-docker:1.32.5.7516-8f4248874
          imagePullPolicy: IfNotPresent
          ports:
            - name: plex
              containerPort: 32400
          env:
            - name: HOSTNAME
              value: "plex.reisman.org"
            - name: TZ
              value: "America/Chicago"
          volumeMounts:
            - mountPath: /config
              name: plex-config
            - mountPath: /data
              name: plex-data
        - name: config-sync
          image: alpine:latest
          imagePullPolicy: Always
          command: [ "/bin/sh", "-c" ]
          args: [ "apk update; apk add --upgrade rsync; while true; do rsync -rlptv --delete /config-active/ /config-backup; sleep 60; done" ]
          volumeMounts:
            - mountPath: /config-backup
              name: plex-config-source
            - mountPath: /config-active
              name: plex-config
      volumes:
        - name: plex-config-source
          persistentVolumeClaim:
            claimName: config-pvc
        - name: plex-config
          emptyDir: {}
        - name: plex-data
          nfs:
            server: 192.168.1.10
            path: /mnt/main/plex
            readOnly: true
