apiVersion: apps/v1
kind: Deployment
metadata:
  name: immich-web
  namespace: photos
  labels:
    app.kubernetes.io/instance: immich
    app.kubernetes.io/name: web
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app.kubernetes.io/name: web
      app.kubernetes.io/instance: immich
  template:
    metadata:
      labels:
        app.kubernetes.io/name: web
        app.kubernetes.io/instance: immich
    spec:
      containers:
        - name: immich-web
          image: registry.lab.reisman.org/proxy.ghcr.io/immich-app/immich-web:v1.78.0
          imagePullPolicy: IfNotPresent
          command:
            - "/bin/sh"
          args:
            - ./entrypoint.sh
          env:
            - name: DB_DATABASE_NAME
              value: immich
            - name: DB_HOSTNAME
              value: immich-postgresql
            - name: DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: immich-secrets 
                  key: postgresql-user-password
                  optional: false
            - name: DB_USERNAME
              value: immich
            - name: IMMICH_MACHINE_LEARNING_URL
              value: http://immich-machine-learning:3003
            - name: IMMICH_SERVER_URL
              value: http://immich-server:3001
            - name: IMMICH_WEB_URL
              value: http://immich-web:3000
            - name: REDIS_HOSTNAME
              value: immich-redis-master
            - name: REDIS_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: immich-secrets 
                  key: redis-password
                  optional: false
            - name: TYPESENSE_API_KEY
              valueFrom:
                secretKeyRef:
                  name: immich-secrets 
                  key: typesense-api-key
                  optional: false
            - name: TYPESENSE_ENABLED
              value: "true"
            - name: TYPESENSE_HOST
              value: immich-typesense
          ports:
            - name: http
              containerPort: 3000
              protocol: TCP
          livenessProbe:
            failureThreshold: 3
            initialDelaySeconds: 0
            periodSeconds: 10
            tcpSocket:
              port: 3000
            timeoutSeconds: 1
          readinessProbe:
            failureThreshold: 3
            initialDelaySeconds: 0
            periodSeconds: 10
            tcpSocket:
              port: 3000
            timeoutSeconds: 1
          startupProbe:
            failureThreshold: 30
            initialDelaySeconds: 0
            periodSeconds: 5
            tcpSocket:
              port: 3000
            timeoutSeconds: 1
